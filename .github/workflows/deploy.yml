name: Deploy biowasm v3

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment"
        required: true
        default: "stg"
      tools_to_compile:
        description: "Tools to compile to WebAssembly (comma-separated; 'all'; 'none')"
        required: true
        default: "seqtk"
      versions:
        description: "Versions to compile (comma-separated)"
        required: true
        default: "1.4"

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy biowasm v3 (${{ github.event.inputs.env }})
    container:
      image: emscripten/emsdk:2.0.25
    steps:
      # ------------------------------------------------------------------------
      # Setup
      # ------------------------------------------------------------------------
      - name: Checkout biowasm repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      # - name: Test Emscripten
      #   if: ${{ github.event.inputs.tools_to_compile != 'none' }}
      #   run: emcc -v

      # # ------------------------------------------------------------------------
      # # Compile
      # # ------------------------------------------------------------------------
      # - name: Compile to WebAssembly
      #   if: ${{ github.event.inputs.tools_to_compile != 'none' }}
      #   run: |
      #     apt-get update && apt-get install -yqq autoconf liblzma-dev
      #     bin/compile.py --tools ${{ github.event.inputs.tools_to_compile }} --env ${{ github.event.inputs.env }} --versions ${{ github.event.inputs.versions }}

      # ------------------------------------------------------------------------
      # Deploy to Cloudflare Workers
      # ------------------------------------------------------------------------
      - name: Install newer Node.js version
        if: ${{ github.event.inputs.tools_to_compile != 'none' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          # Install Node.js
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
          \. "$HOME/.nvm/nvm.sh"
          nvm install 22

          # Deploy
          cd web/
          npm install wrangler
          wrangler kv bulk put --binding=CDN --env=${{ github.event.inputs.env }} ../build/cf_kv_upload.json

          wrangler publish --env=${{ github.event.inputs.env }}

      # - name: Deploy biowasm.com/v3/ (${{ github.event.inputs.env }})
      #   if: ${{ !env.ACT }}
      #   uses: cloudflare/wrangler-action@v3.14.1
      #   env:
      #     CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      #     CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
      #   with:
      #     apiToken: ${{ secrets.CF_API_TOKEN }}
      #     environment: ${{ github.event.inputs.env }}
      #     preCommands: |
      #       cd web/
      #       node -v
      #       cp /__w/_temp/versions/node/v22.16.0/bin/node $(which node)
      #       pwd
      #       cd web/ && wrangler kv bulk put --binding=CDN --env=${{ github.event.inputs.env }} ../build/cf_kv_upload.json

# preCommands: |
#   cd web/
#   apt update && apt install -y jq
#   npm install

#   curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
#   \. "$HOME/.nvm/nvm.sh"
#   nvm install 22
#   node -v # Should print "v22.16.0".
#   nvm current # Should print "v22.16.0".
#   npm -v # Should print "10.9.2".
#   wrangler kv bulk put --remote --binding=CDN --env=${{ github.event.inputs.env }} ../build/cf_kv_upload.json

#
# USER: root
# 
# curl https://get.volta.sh | bash
# export VOLTA_HOME=$HOME/.volta && export PATH=$PATH:$VOLTA_HOME/bin
# ls -lah $HOME
# ls -lah $HOME/.volta
# ls -lah $HOME/.volta/bin
# $HOME/.volta/bin/volta install node@22
# --------
# curl -s -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
# export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && \
#   nvm install 22 && \
#   nvm use 22 && \
#   wrangler kv bulk put --remote --binding=CDN --env=${{ github.event.inputs.env }} ../build/cf_kv_upload.json

      # ------------------------------------------------------------------------
      # Save changes to manifest (only after successful deploy!)
      # ------------------------------------------------------------------------
      - name: Save changes to manifest.json
        if: ${{ github.event.inputs.tools_to_compile != 'none' }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update Biowasm manifest
          file_pattern: biowasm.manifest${{ github.event.inputs.env == 'stg' && '.stg' || '' }}.json
